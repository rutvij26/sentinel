name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Extract version
        id: version
        run: |
          # Extract version from tag (remove 'refs/tags/' prefix)
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Create Release
        id: create_release
        run: |
          # Create release using GitHub CLI
          gh release create ${{ steps.version.outputs.version }} \
            --title "Release ${{ steps.version.outputs.version }}" \
            --notes-file release_notes.md \
            --draft=false \
            --prerelease=false

          echo "Release created successfully for version ${{ steps.version.outputs.version }}"

      - name: Generate Release Notes
        run: |
          VERSION=${{ steps.version.outputs.version }}

          # Generate changelog section
          if [ -f "CHANGELOG.md" ]; then
            # Find the section for this version and extract content
            awk "/## \\[$VERSION\\]/,/## \\[.*\\]/{if (!/## \\[.*\\]/) print}" CHANGELOG.md > release_notes.md
            
            # If no content found, create a basic note
            if [ ! -s release_notes.md ]; then
              echo "## Release $VERSION" > release_notes.md
              echo "This is release $VERSION of Sentinel." >> release_notes.md
              echo "" >> release_notes.md
              echo "Please check the CHANGELOG.md for detailed information." >> release_notes.md
            fi
          else
            echo "## Release $VERSION" > release_notes.md
            echo "No changelog found. Please update CHANGELOG.md for future releases." >> release_notes.md
          fi

          echo "Release notes generated:"
          cat release_notes.md

      - name: Upload Release Assets
        run: |
          VERSION=${{ steps.version.outputs.version }}

          # Upload the built JavaScript file
          gh release upload $VERSION dist/index.js --clobber

          # Upload source maps if they exist
          if [ -f "dist/index.js.map" ]; then
            gh release upload $VERSION dist/index.js.map --clobber
          fi

          # Upload package.json for reference
          gh release upload $VERSION package.json --clobber

          echo "Assets uploaded successfully"

      - name: Notify Release
        run: |
          VERSION=${{ steps.version.outputs.version }}
          echo "üöÄ Release $VERSION has been created successfully!"
          echo "üì¶ Assets uploaded:"
          echo "  - sentinel-action.js"
          if [ -f "dist/index.js.map" ]; then
            echo "  - sentinel-action.js.map"
          fi
          echo "  - package.json"
          echo "üìù Release notes updated from CHANGELOG.md"
          echo ""
          echo "Release URL: https://github.com/${{ github.repository }}/releases/tag/$VERSION"
