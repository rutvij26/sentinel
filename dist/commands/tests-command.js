"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestsCommand = void 0;
class TestsCommand {
    name = 'tests';
    description = 'Suggest test cases for the changes';
    usage = '/tests';
    async execute(context) {
        try {
            // Post a status comment
            await context.octokit.rest.issues.createComment({
                owner: context.owner,
                repo: context.repository,
                issue_number: context.prNumber,
                body: '🧪 **Test suggestions requested**\n\nSentinel AI is analyzing your changes and suggesting test cases...',
            });
            // Generate and post test suggestions
            const testSuggestions = await context.sentinel.suggestTests(context.prNumber);
            if (testSuggestions.length === 0) {
                await context.octokit.rest.issues.createComment({
                    owner: context.owner,
                    repo: context.repository,
                    issue_number: context.prNumber,
                    body: '✅ **Test Analysis Complete**\n\nNo specific test suggestions were generated. Consider adding general test coverage for your changes.\n\n---\n*Generated by Sentinel AI*',
                });
            }
            else {
                const testBody = this.buildTestSuggestionsComment(testSuggestions);
                await context.octokit.rest.issues.createComment({
                    owner: context.owner,
                    repo: context.repository,
                    issue_number: context.prNumber,
                    body: testBody,
                });
            }
        }
        catch (error) {
            throw new Error(`Failed to execute tests command: ${error instanceof Error ? error.message : 'Unknown error'}`);
        }
    }
    buildTestSuggestionsComment(testSuggestions) {
        let body = '## 🧪 Test Suggestions\n\n';
        testSuggestions.forEach((test) => {
            body += `### 📁 ${test.file}\n`;
            body += `${test.description}\n\n`;
            body += '**Suggested Test Cases:**\n';
            test.testCases.forEach((testCase) => {
                body += `- [ ] ${testCase}\n`;
            });
            body += '\n';
        });
        body += '---\n';
        body +=
            '*Generated by Sentinel AI. Consider implementing these tests to improve code coverage.*';
        return body;
    }
}
exports.TestsCommand = TestsCommand;
//# sourceMappingURL=tests-command.js.map