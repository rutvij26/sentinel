import { Command, CommandContext } from '../types';

export class SummarizeCommand implements Command {
  name = 'summarize';
  description = 'Generate a summary of the pull request changes';
  usage = '/summarize';

  async execute(context: CommandContext): Promise<void> {
    try {
      // Post a status comment
      await context.octokit.rest.issues.createComment({
        owner: context.owner,
        repo: context.repository,
        issue_number: context.prNumber,
        body: 'üìù **Summary requested**\n\nSentinel AI is generating a summary of your pull request...',
      });

      // Generate and post summary
      const summary = await context.sentinel.summarizePR(context.prNumber);

      await context.octokit.rest.issues.createComment({
        owner: context.owner,
        repo: context.repository,
        issue_number: context.prNumber,
        body: `## üìã Pull Request Summary\n\n${summary}\n\n---\n*Generated by Sentinel AI*`,
      });
    } catch (error) {
      throw new Error(
        `Failed to execute summarize command: ${error instanceof Error ? error.message : 'Unknown error'}`
      );
    }
  }
}
